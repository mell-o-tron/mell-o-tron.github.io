/// <reference types="node" />
import { EventEmitter } from 'events';
import { ExecCore } from "../exec";
declare class Tty extends EventEmitter {
    core: ExecCore;
    fds: number[];
    stdin_fl: number;
    termios: {
        flags: i32[];
        win: Uint16Array;
    };
    debug: (...args: any) => void;
    constructor(core: ExecCore);
    to(): TtyProps;
    makeTty(fd: number): void;
    write(data: any): void;
    fd_fdstat_set_flags(fd: number, flags: number): number;
    fd_fdstat_get(fd: number, bufPtr: number): any;
    defaultWindow(): Uint16Array;
    get overrideImport(): {};
    get import(): {};
    get extlib(): {};
    tcgetattr(fd: i32, termios_p: i32): number;
    tcsetattr(fd: i32, when: i32, termios_p: i32): number;
    tgetent(bp: i32, name: i32): number;
    tty_ioctl(fd: i32, request: i32, buf: i32): void;
}
declare type i32 = number;
declare type TtyProps = {
    termios: {
        win: Uint16Array;
    };
};
export { Tty, TtyProps };
